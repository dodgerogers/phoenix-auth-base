// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`async AuthenticationActions authenticateWithStoredToken matches snapshot 1`] = `
Object {
  "type": "AUTHENTICATE_WITH_STORED_TOKEN_REQUEST",
}
`;

exports[`async AuthenticationActions confirmation when confirmation fails 1`] = `
Array [
  Object {
    "error": "Invalid credentials",
    "type": "CONFIRMATION_FAILURE",
  },
]
`;

exports[`async AuthenticationActions confirmation when confirmation is successful 1`] = `
Array [
  Object {
    "accessToken": Object {
      "accessToken": "token",
    },
    "type": "VERIFY_TOKEN_REQUEST",
  },
  Object {
    "type": "CONFIRMATION_SUCCESS",
  },
  Object {
    "id": undefined,
    "notification": Object {
      "level": "success",
      "message": "Account successfully confirmed! You are now logged in",
    },
    "type": "CREATE_NOTIFICATION",
  },
  Object {
    "data": Object {
      "id": "CONFIRMATION_MODAL",
    },
    "type": "HIDE_MODAL",
  },
]
`;

exports[`async AuthenticationActions passwordResetRequestSuccess matches snapshot 1`] = `
Object {
  "formValues": Object {},
  "type": "PASSWORD_RESET_REQUEST_SUCCESS",
}
`;

exports[`async AuthenticationActions refreshToken refreshToken matches snapshot 1`] = `
Object {
  "type": "REFRESH_TOKEN_REQUEST",
}
`;

exports[`async AuthenticationActions refreshToken refreshTokenFailure matches snapshot 1`] = `
Object {
  "type": "REFRESH_TOKEN_FAILURE",
}
`;

exports[`async AuthenticationActions refreshToken refreshTokenSuccess matches snapshot 1`] = `
Object {
  "type": "REFRESH_TOKEN_SUCCESS",
}
`;

exports[`async AuthenticationActions register registerFailure matches snapshot 1`] = `
Object {
  "error": null,
  "type": "REGISTER_FAILURE",
}
`;

exports[`async AuthenticationActions register registerSuccess matches snapshot 1`] = `
Object {
  "formValues": Object {},
  "type": "REGISTER_SUCCESS",
}
`;

exports[`async AuthenticationActions resendConfirmation when resendConfirmation fails 1`] = `
Array [
  Object {
    "error": "Invalid credentials",
    "type": "RESEND_CONFIRMATION_FAILURE",
  },
]
`;

exports[`async AuthenticationActions resendConfirmation when resendConfirmation is successful 1`] = `
Array [
  Object {
    "id": "AUTHENTICATION",
    "notification": Object {
      "level": "success",
      "message": "If an account exists we have sent a confirmation code",
    },
    "type": "CREATE_NOTIFICATION",
  },
  Object {
    "data": Object {
      "id": "CONFIRMATION_MODAL",
    },
    "type": "SHOW_MODAL",
  },
  Object {
    "meta": Object {
      "form": "CONFIRMATION",
      "keepDirty": undefined,
    },
    "payload": Immutable.Map {
      email: "email@email.com",
},
    "type": "@@redux-form/INITIALIZE",
  },
]
`;

exports[`async AuthenticationActions resetPasswordSuccess matches snapshot 1`] = `
Object {
  "formValues": Object {},
  "type": "RESET_PASSWORD_SUCCESS",
}
`;

exports[`async AuthenticationActions signInSuccess matches snapshot 1`] = `
Object {
  "accessToken": "token",
  "type": "SIGN_IN_SUCCESS",
}
`;

exports[`async AuthenticationActions signOut signOutFailure matches snapshot 1`] = `
Object {
  "type": "SIGN_OUT_FAILURE",
}
`;

exports[`async AuthenticationActions signOut signOutRequest matches snapshot 1`] = `
Object {
  "type": "SIGN_OUT_REQUEST",
}
`;

exports[`async AuthenticationActions signOut signOutSuccess matches snapshot 1`] = `
Object {
  "type": "SIGN_OUT_SUCCESS",
}
`;

exports[`async AuthenticationActions verifyToken verifyTokenFailure matches snapshot 1`] = `
Object {
  "type": "VERIFY_TOKEN_FAILURE",
}
`;

exports[`async AuthenticationActions verifyToken verifyTokenRequest matches snapshot 1`] = `
Object {
  "accessToken": undefined,
  "type": "VERIFY_TOKEN_REQUEST",
}
`;

exports[`async AuthenticationActions verifyToken verifyTokenSuccess matches snapshot 1`] = `
Object {
  "type": "VERIFY_TOKEN_SUCCESS",
  "user": undefined,
}
`;
