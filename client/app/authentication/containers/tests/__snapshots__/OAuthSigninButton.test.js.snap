// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OmniautSiginButton matches snapshot when is disabled 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(OAuthSignInButton)
    provider="facebook"
  >
    <OAuthSignInButton
      disabled={true}
      loading={false}
      oAuthSignIn={[Function]}
      provider="facebook"
    >
      <Button
        as="button"
        disabled={true}
        loading={false}
        onClick={[Function]}
      >
        <button
          className="ui disabled button"
          disabled={true}
          onClick={[Function]}
          tabIndex={-1}
        >
          Sign in
        </button>
      </Button>
    </OAuthSignInButton>
  </Connect(OAuthSignInButton)>
</Provider>
`;

exports[`OmniautSiginButton matches snapshot when is loading 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(OAuthSignInButton)
    provider="facebook"
  >
    <OAuthSignInButton
      disabled={false}
      loading={true}
      oAuthSignIn={[Function]}
      provider="facebook"
    >
      <Button
        as="button"
        disabled={false}
        loading={true}
        onClick={[Function]}
      >
        <button
          className="ui loading button"
          onClick={[Function]}
        >
          Sign in
        </button>
      </Button>
    </OAuthSignInButton>
  </Connect(OAuthSignInButton)>
</Provider>
`;

exports[`OmniautSiginButton matches snapshot when is neither disabled nor loading 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(OAuthSignInButton)
    provider="facebook"
  >
    <OAuthSignInButton
      disabled={false}
      loading={false}
      oAuthSignIn={[Function]}
      provider="facebook"
    >
      <Button
        as="button"
        disabled={false}
        loading={false}
        onClick={[Function]}
      >
        <button
          className="ui button"
          onClick={[Function]}
        >
          Sign in
        </button>
      </Button>
    </OAuthSignInButton>
  </Connect(OAuthSignInButton)>
</Provider>
`;
